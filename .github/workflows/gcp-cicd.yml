name: Release and Upload

on:
  push:
    branches:
      - use-standard-version

jobs:
  build-release:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        run: |-
          yarn
          yarn build

      - name: Test
        run: yarn test

      - name: standard-version
        run: |-
          mkdir tmp
          yarn release --dry-run > tmp/RELEASE-OUTPUT
          sed -n '/^---/,/^---/p' tmp/RELEASE-OUTPUT | sed '/^---$/d' > tmp/CHANGELOG_CHANGES
          echo "TAG_RELEASE=$(grep -w 'tagging release' tmp/RELEASE-OUTPUT | cut -d' ' -f4)" >> $GITHUB_ENV

          # grep -w 'tagging release' tmp/RELEASE-OUTPUT | cut -d' ' -f4 > tmp/TAG_RELEASE
          # echo "CHANGELOG_CHANGES=$(sed -n '/^---/,/^---/p' tmp/RELEASE-OUTPUT | sed '/^---$/d')" >> $GITHUB_ENV
          # git describe --abbrev=0

          yarn release

      - name: trying
        run: |-
          echo RELEASE-OUTPUT
          cat tmp/RELEASE-OUTPUT
          echo CHANGELOG_CHANGES
          cat tmp/CHANGELOG_CHANGES
          echo TAG_RELEASE
          # cat tmp/TAG_RELEASE
          echo ${{ env.TAG_RELEASE }}

      # - name: Create Tag
      #   id: create-tag
      #   uses: hennejg/github-tag-action@v4.3.1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     release_branches: master

      # - name: Update package.json version
      #   run: |-
      #     git config --global user.email "tinybuilder@productdock.com"
      #     git config --global user.name "TinyBuilder"
      #     npm version ${{ steps.create-tag.outputs.new_version }} --allow-same-version

      # - name: Update Changelog
      #   uses: stefanzweifel/changelog-updater-action@v1
      #   with:
      #     latest-version: ${{ steps.create-tag.outputs.new_version }}
      #     release-notes: ${{ steps.create-tag.outputs.changelog }}

      # - name: Commit updated CHANGELOG
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: Update version and CHANGELOG

      - name: Pack
        run: yarn pack

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: '*.tgz'
          commit: use-standard-version
          tag: ${{ env.TAG_RELEASE }}
          generateReleaseNotes: true
          # body: ${{ steps.create-tag.outputs.changelog }}
          bodyFile: tmp/CHANGELOG_CHANGES
